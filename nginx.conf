user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    sendfile on;
    keepalive_timeout 65;

    # Proxy to Certbot for HTTP-01 challenge
    server {
        listen 80;
        server_name sulis104.zcu.cz;

        location /.well-known/acme-challenge/ {
            root /var/www/html; # Shared folder for Certbot
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }


    # HTTPS server configuration
    server {
        listen 443 ssl;
        server_name sulis104.zcu.cz;

        ssl_certificate /etc/letsencrypt/live/sulis104.zcu.cz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/sulis104.zcu.cz/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # API Service
        location /api/ {
            rewrite ^/api(/.*)$ $1 break;          # Remove the `/api` prefix
            proxy_pass http://api_server:5000;    # Forward to the API server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grafana Service
        location /grafana/ {
            rewrite ^/grafana(/.*)$ $1 break;    # Strip the `/grafana` prefix
            proxy_pass http://grafana:3000;     # Backend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }


        # InfluxDB Service
        location /influxdb/ {
            rewrite ^/influxdb(/.*)$ $1 break;    # Strip the `/influxdb` prefix
            proxy_pass http://influxdb:8086;     # Backend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }

    }



}




